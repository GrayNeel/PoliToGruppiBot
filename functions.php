<?php

function askWhat($userid) {
	updateLocation("kb/add", $userid);
	inlinekeyboard([
        [["text" => "Gruppo", "callback_data" => "kb/add/group"],["text" => "Facolt√†", "callback_data" => "kb/add/faculty"]],
        [["text" => "‚Ü© Indietro", "callback_data" => "kb/start"]] 
		], $userid, "Cosa vuoi aggiungere?");
	return;
}

function searchCommands($text, $userid, $firstname,&$iscommand,&$database,$cbdata) {
	include "messages.php";
	if (substr($text, 0, 1) === '/') {
		$iscommand = 1;
		$textarraylw = explode(' ',strtolower($text));
        $cmd = $textarraylw[0];

		switch ($cmd) {
            case "/start":
                updateLocation("kb/start", $userid);
				inlinekeyboard([
				  [["text" => "üîé Inizia!", "callback_data" => "kb/start/0"]]
				], $userid, $start_response);
            break;
            case "/addlink":
				if(getUserType($userid) != "admin"){
                    updateLocation("kb/nadd", $userid);
                    inlinekeyboard([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start"]]], $userid, $notadmin_response);
				}else{
                    askWhat($userid);
                }
            break;
            case "/send":
                $tid=$textarraylw[1];
                $response = "‚úÖ La tua richiesta √® stata accolta e il link √® stato aggiunto. Grazie per il tuo fondamentale contributo!";
                sendMess($tid,$response);
                inlinekeyboard([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start"]]], $userid, "Messaggio inviato con successo.");
            break;
            case "/upd":
                $list = getUserId();
                $response = "Ciao! üëã\nCon l'ultimo aggiornamento √® stato aggiunto il men√π per i crediti liberi III anno (ingegneria triennale). Se conosci dei link per questi gruppi sarebbe magnifico suggerirli tramite l'apposito pulsante in questo bot. In questo modo, potremmo semplificare il popolamento dei gruppi! Grazie!\n\nRiavvia il bot con /start";
                foreach($list as $usrid){
                    sendMess($usrid[0],$response);
                    setAsSent($usrid[0]);
                }
                $left = countLeft();
                inlinekeyboard([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start"]]], $userid, "Messaggi inviati con successo. Ne restano " . $left . " da inviare.");
            break;
			default:
              $response = "<b>‚ö†Ô∏è ATTENZIONE!</b>\nI comandi non esistono pi√π! Da ora, puoi fare tutto utilizzando i pulsanti integrati. Provali schiacciando il pulsante qui sotto! üëá";
              updateLocation("kb", $userid);
              inlinekeyboard([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start"]]], $userid, $response);
			  break;
		  }
		}
	return;
}

function getFacultiesKeyboard($type) {
    $faculties = getFaculties($type);
    $resarray = array();
    $i = 0;
    $row = array();
    switch($type) {
        case "IT":
            array_push($row,["text" => "üîΩ INGEGNERIA (TRIENNALE) üîΩ", "callback_data" => "null"]);
            array_push($resarray,$row);
        break;
        case "IM":
            array_push($row,["text" => "üîΩ INGEGNERIA (MAGISTRALE) üîΩ", "callback_data" => "null"]);
            array_push($resarray,$row);
        break;
        case "AT":
            array_push($row,["text" => "üîΩ ARCHITETTURA (TRIENNALE) üîΩ", "callback_data" => "null"]);
            array_push($resarray,$row);
        break;
        case "AM":
            array_push($row,["text" => "üîΩ ARCHITETTURA (MAGISTRALE) üîΩ", "callback_data" => "null"]);
            array_push($resarray,$row);
        case "C3":
            array_push($row,["text" => "üîΩ CREDITI III ANNO (TRIENNALE) üîΩ", "callback_data" => "null"]);
            array_push($resarray,$row);
        
        break;
    }
    $row = array();
    foreach($faculties as $el){
        if($i != 2) {
            array_push($row,["text" => "$el[2]", "callback_data" => "$el[1]"]);
            $i++;
        }else{
            array_push($resarray,$row);
            $row = [];
            array_push($row,["text" => "$el[2]", "callback_data" => "$el[1]"]);
            $i = 1;
        }   
    }
    array_push($resarray,$row);
    return $resarray;
}

function getLinksKeyboard($facultyid) {
    $resarray = array();
    $links = getLinksByFacultyId($facultyid);
    $name = getNameByFacultyId($facultyid);
    $type = getTypeByFacultyId($facultyid);
    $name = strtoupper($name);
    $i = 0;
    $row = array();

    switch ($type) {
        case "IT":
        case "C3":
        case "AT":
            $typetotext = "TRIENNALE";
        break;
        case "IM":
        case "AM":
            $typetotext = "MAGISTRALE";
        break;
        default:
            $typetotext = '';
    }

    if($typetotext != '') {
        array_push($row,["text" => "üîΩ " . $name . " ($typetotext) üîΩ", "callback_data" => "null"]);
        array_push($resarray,$row);
    }else{
        array_push($row,["text" => "üîΩ " . $name . " üîΩ", "callback_data" => "null"]);
        array_push($resarray,$row);
    }
    
    $row = array();
    foreach($links as $el){
        if($i != 2) {
            array_push($row,["text" => "üîó " . "$el[0]", "url" => "$el[1]"]);
            $i++;
        }else{
            array_push($resarray,$row);
            $row = [];
            array_push($row,["text" => "üîó " . "$el[0]", "url" => "$el[1]"]);
            $i = 1;
        }   
    }
    array_push($resarray,$row);
    return $resarray;
}

function manageKeyboard($userid, $cbdata) {
    $db_cbdata = getAllCbdata();
    foreach($db_cbdata as $row) {
        if($row[0] == $cbdata) {
            $facultyid = getFacultyIdBycbdata($cbdata);
            $resarray = getLinksKeyboard($facultyid);
            $type = getTypeByFacultyId($facultyid);
            
            switch($type) {
                case "IT":
                    array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing/tri"]]);
                break;
                case "IM":
                    array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing/mag"]]);
                break;
                case "AT":
                    array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/arch/tri"]]);
                break;
                case "AM":
                    array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/arch/mag"]]);
                break;
                case "C3":
                    array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing"]]);
                break;
            }
            updateKeyboard($resarray, $userid,$GLOBALS['msgid']);
            return;
        }
    }
    return;
}

function searchKeyboard($cbdata, $userid) {
    $firstname = $GLOBALS['firstname'];
    include "messages.php";

    switch($cbdata) {
        case "kb/start":
            editText([
                [["text" => "üîé Inizia!", "callback_data" => "kb/start/0"]]
            ], $userid,$GLOBALS['msgid'],$start_response);
        break;
        case "kb/start/0":
            editText([
                [["text" => "AREA DELL'INGEGNERIA", "callback_data" => "kb/start/0/ing"]],
                [["text" => "AREA DELL'ARCHITETTURA", "callback_data" => "kb/start/0/arch"]],
                [["text" => "GRUPPI GENERICI", "callback_data" => "kb/start/0/oth"]],
                [["text" => "24 CFU - CIFIS PIEMONTE", "url" => "https://t.me/piemonte24cfu"]],
                [["text" => "ü§ù DONA PER SOSTENERE IL BOT", "url" => "https://paypal.me/pools/c/8xn0U8qhHx"]],
                [["text" => "‚ÑπÔ∏è Info", "callback_data" => "kb/start/0/info"],["text" => "üí° Segnala link", "callback_data" => "kb/start/0/suggest"]],
                [["text" => "‚ùì NoWhatsapp", "callback_data" => "kb/start/0/nowhatsapp"],["text" => "üìä Statistiche", "callback_data" => "kb/start/0/stats"]],
                [["text" => "üõ† Estensione Chrome PoliTools", "url" => "https://chrome.google.com/webstore/detail/politools/fbbjhoaakfhbggkegckmjafkffaofnkd?hl=it"]],
                [["text" => "‚Ü© Torna al messaggio di benvenuto", "callback_data" => "kb/start"]]
            ], $userid,$GLOBALS['msgid'],$mainmenu_response);
        break;
        case "kb/start/0/ing":
            editText([
                [["text" => "üîΩ AREA DELL'INGEGNERIA 2020/21 üîΩ", "callback_data" => "null"]],
                [["text" => "Primo Anno", "callback_data" => "kb/start/0/ing/pri"]],
                [["text" => "Triennale", "callback_data" => "kb/start/0/ing/tri"],["text" => "Magistrale", "callback_data" => "kb/start/0/ing/mag"]],
                [["text" => "Crediti liberi III anno", "callback_data" => "kb/start/0/ing/c3"]],
                [["text" => "üîΩ AREA DELL'INGEGNERIA 2021/22 üîΩ", "callback_data" => "null"]],
                [["text" => "üîó Aspiranti matricole 2021/22", "url" => "https://t.me/matricolepolito2122"]],
                [["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0"]]
            ], $userid,$GLOBALS['msgid'],$ing_response);
        break;
        case "kb/start/0/ing/tri":
            $resarray = getFacultiesKeyboard("IT");
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$ingtri_response);
        break;
        case "kb/start/0/ing/mag":
            $resarray = getFacultiesKeyboard("IM");
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$ingmag_response);
        break;
        case "kb/start/0/ing/c3":
            $resarray = getFacultiesKeyboard("C3");
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$ingcred_response);
        break;
        case "kb/start/0/ing/pri/cogn":
            $resarray = getLinksKeyboard(78); //FacultyId Primo anno per cognome = 78
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing/pri"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$ingpricogn_response);
        break;
        case "kb/start/0/ing/pri/fac":
            $resarray = getLinksKeyboard(79); //FacultyId Primo anno per facolt√† = 79
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing/pri"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$ingprifac_response);
        break;    
        case "kb/start/0/ing/pri/eng":
            $resarray = getLinksKeyboard(80); //FacultyId Primo anno in inglese = 80
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing/pri"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$ingprieng_response);
        break;
        case "kb/start/0/ing/pri":
            editText([
                [["text" => "üîΩ PRIMO ANNO üîΩ", "callback_data" => "null"]],
                [["text" => "Per cognome", "callback_data" => "kb/start/0/ing/pri/cogn"],["text" => "Per facolt√†", "callback_data" => "kb/start/0/ing/pri/fac"]],
                [["text" => "1st Year in English", "callback_data" => "kb/start/0/ing/pri/eng"]],
                [["text" => "üîΩ PRIMO ANNO GENERICI üîΩ", "callback_data" => "null"]],
                [["text" => "üîó Matricole 2020/21", "url" => "https://t.me/matricolepolito"],["text" => "üîó Lingua inglese","url" => "https://t.me/joinchat/AWHhTUUXXLMS99Tod9DXWA"]],
                [["text" => "üîó Gruppi Materie comuni", "url" => "t.me/primoanno_bot"]],
                [["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/ing"]]
            ],$userid,$GLOBALS['msgid'],$ingpri_response);
        break;
        case "kb/start/0/arch":
            editText([
                [["text" => "üîΩ AREA DELL'ARCHITETTURA üîΩ", "callback_data" => "null"]],
                [["text" => "Triennale", "callback_data" => "kb/start/0/arch/tri"],["text" => "Magistrale", "callback_data" => "kb/start/0/arch/mag"]],
                [["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0"]]
            ], $userid,$GLOBALS['msgid'],$arch_response);
        break;
        case "kb/start/0/arch/tri":
            $resarray = getFacultiesKeyboard("AT");
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/arch"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$archtri_response);
        break;
        case "kb/start/0/arch/mag":
            $resarray = getFacultiesKeyboard("AM");
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0/arch"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$archmag_response);
        break;
        case "kb/start/0/oth":
            $resarray = getLinksKeyboard(27);
            array_push($resarray,[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0"]]);
            editText($resarray,$userid,$GLOBALS['msgid'],$oth_response);
        break;
        case "kb/start/0/info":
            updateLocation("kb/start/0/info", $userid);
            editText([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0"]]],$userid,$GLOBALS['msgid'],$info_response);
        break;
        case "kb/start/0/suggest":
            updateLocation("kb/start/0/suggest", $userid);
            editText([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0"]]],$userid,$GLOBALS['msgid'],$suggest_response);
        break;
        case "kb/start/0/nowhatsapp":
            updateLocation("kb/start/0/nowhatsapp", $userid);
            editText([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0"]]],$userid,$GLOBALS['msgid'],$nowhatsapp_response);
        break;
        case "kb/start/0/stats":
            updateLocation("kb/start/0/stats", $userid);
            editText([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start/0"]]],$userid,$GLOBALS['msgid'],$stats_response);
        break;
        default:
            //updateLocation($cbdata,$userid);
            manageKeyboard($userid, $cbdata);
        break;
    }
    
    return;
}

//GESTIONE INLINE QUERY
function createITText($facultyid, $name){
    $links = getLinksByFacultyId($facultyid);
    $type = getTypeByFacultyId($facultyid);
    $fulltitle = getNameByFacultyId($facultyid);

    switch ($type) {
        case "IT":
        case "AT":
            $typetotext = "Triennale";
        break;
        case "IM":
        case "AM":
            $typetotext = "Magistrale";
        break;
        default:
            $typetotex = '';
    }

	$n = count($links);
	if($n === 1) {
        $text = "√à disponibile *" . $n . "* link per la facolt√† di *" . $fulltitle .
        "* (" . $typetotext . "):\n\n" . "1. [" . $links[0][0] ."](" . $links[0][1] . ")\n";
		return $text;
	}
	
    $text = "Sono disponibili *" . $n . "* link per la facolt√† di *" . $fulltitle .
    "* (" . $typetotext . "):\n\n";

    if($type == "O") {
        if($n === 1) {
            $text = "√à disponibile *" . $n . "* link generale:\n\n" . "1. [" . $links[0][0] ."](" . $links[0][1] . ")\n";
            return $text;
        }
        
        $text = "Sono disponibili *" . $n . "* link generali:\n\n";
    }

    if(strtolower($name) == "primo anno") {
        if($n === 1) {
            $text = "√à disponibile *" . $n . "* link per i gruppi del *primo anno* triennale di ingegneria:\n\n" . "1. [" . $links[0][0] ."](" . $links[0][1] . ")\n";
            return $text;
        }
        
        $text = "Sono disponibili *" . $n . "* link per i gruppi del *primo anno* triennale di ingegneria:\n\n";
    }

	$sum = 0;  
	foreach ($links as $link) {
		$sum++;
 		$text = $text . $sum . ". [" . $link[0] . "](" . $link[1] .")\n";
	}
	  
	return $text;
}

function searchDB_all(&$responsearray) {
    $db = getAllFaculties();

	foreach ($db as $group) {
		$answer["message_text"] = createITText($group[0],$group[1]);
		$answer["parse_mode"] = "markdown";
		$answer["disable_web_page_preview"] = true;
        $id = count($responsearray) + 1;

        switch($group[3]) {
            case "IT":
            case "AT":
                $title = $group[1] . " (Triennale)";
            break;
            case "IM":
            case "AM":
                $title = $group[1] . " (Magistrale)";
            break;
            case "O":
                $title = $group[1];
            break;
            default:
                $title = $group[1];
            break;
        }
        //$group[2][26] = "a";
		$output = array(
			"type" => "article",
			"id" => $id,
			"input_message_content" => $answer,
			"title" => $title,
			"description" => $group[2],
			"thumb_url" => "https://telegram.org/img/t_logo.png"
		);
		
		array_push($responsearray, $output);
	}
	  return;
}

function searchDB_filtered($question, &$responsearray) {
    $db = getAllFaculties();

	foreach ($db as $group) {
		if(strncmp($question,strtolower($group[1]),strlen($question)) == 0) {
			$answer["message_text"] = createITText($group[0],$group[1]);
			$answer["parse_mode"] = "markdown";
			$answer["disable_web_page_preview"] = true;
            $id = count($responsearray) + 1;
            switch($group[3]) {
                case "IT":
                case "AT":
                case "IP":
                    $title = $group[1] . " (Triennale)";
                break;
                case "IM":
                case "AM":
                    $title = $group[1] . " (Magistrale)";
                break;
                case "O":
                    $title = $group[1];
                break;
                default:
                    $title = $group[1];
                break;
            }
            //$group[2][26] = "a";
			$output = array(
				"type" => "article",
				"id" => $id,
				"input_message_content" => $answer,
				"title" => $title,
				"description" => $group[2],
				"thumb_url" => "https://telegram.org/img/t_logo.png"
			);
			
			array_push($responsearray, $output);
	  }
	}
	  return;
}

function searchDB($question, $is_empty) {
	$responsearray = array();

	if($is_empty){
		searchDB_all($responsearray);
		return $responsearray;
	}

	$inputstr = strtolower($question);
	
	searchDB_filtered($inputstr, $responsearray);
	
	return $responsearray;
}

function ILQuery($ilquery,$ilqid) {
	if ($ilquery != null) {
		$ilquery = trim($ilquery);
		$queryans = searchDB($ilquery,0);
		ansquery($ilqid, $queryans);
		return;
    }
    
    $queryans = searchDB($ilquery,1);
    ansquery($ilqid, $queryans);
	
	return;
}

//RICERCA DAL BOT

function SearchLinks($userid,$iscommand, $text) {
	if($iscommand === 1) return;
    $db = getAllFaculties();

	$length = strlen($text);
    $text = strtolower($text);
    $trovato = false;
    $textarraylw = explode(' ',strtolower($text));
    foreach ($db as $group) {
		/*if(strncmp($text,strtolower($group[1]),strlen($text)) == 0) {
            $answer = createITText($group[0],$group[1]);
            updateLocation("kb/search", $userid);
            inlinekeyboardMD([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start"]]], $userid, $answer);
            $trovato = true;			
        }*/
      
        foreach($textarraylw as $word) {
            if(strncmp($word,strtolower($group[1]),strlen($word)) == 0) {
                $answer = createITText($group[0],$group[1]);
                updateLocation("kb/search", $userid);
                inlinekeyboardMD([[["text" => "‚Ü© Indietro", "callback_data" => "kb/start"]]], $userid, $answer);
                $trovato = true;			
          }
        }
      
	}
    
    if(!$trovato) {
        $text = "üòî <b>GRUPPO NON TROVATO</b>\nSono spiacente, ma non ho trovato il gruppo che cerchi. Potrebbe essere un errore di battitura. Per essere certo che non ci sia, controlla tramite il men√π che appare schiacciando il pulsante qui sotto üëá";
        updateLocation("kb/notfound", $userid);
		inlinekeyboard([[["text" => "‚ôªÔ∏è RICOMINCIA", "callback_data" => "kb/start"]]], $userid, $text);
    }
	return;
}

?>